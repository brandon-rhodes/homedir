#!/usr/bin/env python3

import pystray
import pulsectl
from PIL import Image, ImageDraw, ImageFont

big_font = ImageFont.load_default(54)
little_font = ImageFont.load_default(36)
q = []

def create_image(width, height, text):
    if len(text) <= 2:
        font = big_font
    else:
        font = little_font
    image = Image.new('RGB', (width, height), 'white')
    draw = ImageDraw.Draw(image)
    draw.text((0, 0), text, fill='black', font=font)
    return image

def on_volume_change(event):
    if event.t != 'change':
        return
    if event.facility != 'sink':
        return
    q.append(event.index)
    raise pulsectl.PulseLoopStop

icon = pystray.Icon('Volume percent', icon=create_image(64, 64, '%'))

def app(icon):
    icon.visible = True
    with pulsectl.Pulse("my_app") as pulse:
        pulse.event_mask_set("sink")
        pulse.event_callback_set(on_volume_change)
        while True:
            pulse.event_listen()
            while q:
                index = q.pop()
                sink_info = pulse.sink_info(index)
                percent = int(sink_info.volume.value_flat * 100.0)
                print(percent, icon.visible)
                icon.icon = create_image(64, 64, str(percent))

icon.run(app)
