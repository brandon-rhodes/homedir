# Essential environment variables that need to be seen by X
# applications, so setting them in my .profile is not enough.

SetEnv LC_COLLATE C

# Assure that all subprocesses aborb our umask and other settings that
# are defined in our shell startup files.

ExecUseShell /bin/bash
SetEnv BASH_ENV $HOME/.bashenv

# Create a virtual desktop several times the size of the physical
# screen, and immediately jump an entire screen over when the mouse
# reaches an edge of the screen.

DeskTopSize 3x3
EdgeResistance 0
EdgeScroll 100 100

# Allow windows to be dragged between screens with little resistance.

Style * EdgeMoveDelay 0
Style * EdgeMoveResistance 64

# Moving and resizing windows should affect the live window, instead of
# leaving the window alone (and just displaying a rectangle) until the
# operation is complete.

OpaqueMoveSize unlimited
Style * ResizeOpaque

# Add a special window title that I can give to windows that I want to
# remain on top, that never get obscured by other windows.

Style TOP* StaysOnTop, Borders, Title
Style "Screen Ruler" StaysOnTop, !Borders, !Title
Style StayOnTop StaysOnTop, !Borders, !Title
Style Borderless !Borders, !Title

# Specially style the status popup that I can summon with the date etc.

Style win-space-popup StaysOnTop, Borders, !Title

# Autoraise windows if the mouse stays in them for 0.3 seconds.

FvwmAuto 300 Raise Nop

# Windows should get focus when the mouse enters them, and retain focus
# until the mouse enters another window.

Style * SloppyFocus

# Menu appearance.

MenuStyle * fvwm, Foreground white, Background red4, Greyed grey20
MenuStyle * Font "xft:Inconsolata:Regular:pixelsize=24:minispace=True:antialias=True"

# Minimalist windows: no handles or buttons.

Style * Font "xft:Ubuntu:Regular:pixelsize=18:minispace=True:antialias=True"
Style * IconFont "xft:Ubuntu:Regular:pixelsize=18:minispace=True:antialias=True"
Style * HilightFore white, HilightBack black
Style * BorderWidth 1, !Handles
Style * Icon unknown1.xpm, Color lightgrey/dimgrey
Style * MwmBorder, MWMFunctions, MWMDecor, HintOverride
Style * DecorateTransient, NoPPosition
Style * !Button 1, !Button 2, !Button 4, !Button 6
Style * MinOverlapPlacement

TitleStyle RightJustified
BorderStyle -- Flat

# Speed up window operations at the expense of a bit of RAM.

Style * BackingStore, SaveUnder

# Styles for various Fvwm modules.

Style Fvwm*       NoTitle,  Sticky, WindowListSkip
Style Fvwm*       BorderWidth 2, CirculateSkipIcon, CirculateSkip

# Styles for various programs.

Style *lock           NoTitle, NoHandles, Sticky, WindowListSkip, ClickToFocus
Style unity-2d-panel  NoTitle, BorderWidth 0, HandleWidth 0, WindowListSkip
Style Desktop         WindowListSkip

# Make the cursor look good along window edges.

CursorStyle TOP top_side

# Key bindings!  It would consume too much of my day to target and click
# an icon or menu every time I need a browser or xterm for a few-second
# operation, so I launch everything via keyboard shortcuts instead,
# using the otherwise useless "Windows" key ("A" means "in any context"
# and "4" means "the Windows key" otherwise known as "Win+...").

Key XF86MonBrightnessDown A N Exec exec $HOME/bin/,backlight down
Key XF86MonBrightnessUp A N Exec exec $HOME/bin/,backlight up

Key Equal A 4  Exec exec $HOME/bin/,wc
Key a A 4  Menu Applications Nop
Key b A 4  Menu BrowserBookmarks Nop
Key c A 4  Exec exec xterm -geometry 60x16 -T 'TOP Calculator' -e 'units'
Key d A 4  Exec exec open $HOME/Downloads
Key e A 4  Exec exec emacs
Key g A 4  Exec exec browser "https://github.com/notifications"
Key i A 4  All (CurrentPage, !Iconic) Iconify
Key i A 4S All (CurrentPage, Iconic) Iconify
Key l A 4  Lower
Key m A 4  Exec exec bash $HOME/.fvwm/open-in-google-maps.sh
Key n A 4  Exec exec ,browser
Key o A 4  Exec exec open $HOME/Downloads/"$(ls -tr ~/Downloads | tail -1)"
Key p A 4  Menu Projects Nop
Key r A 4  Exec exec $HOME/.fvwm/clipboard-rot13.py
Key s A 4  Menu SshDestinations Nop
Key t A 4  Exec exec xterm
Key t A 4S Exec exec xterm -geometry 80x8
Key u A 4  Exec exec xterm -e 'xclip -o | ,unicode-names | less'
Key v A 4  Menu Pastes Nop
Key w A 4  Menu MenuFvwmWindowOps Nop
Key x A 4  Menu MenuTransforms Nop
Key y A 4  Exec exec ,yubi
Key z A 4  Exec exec $HOME/.fvwm/z_transform.py

# Vertical maximize with Windows+Tab, full maximize with Windows+F,
# and 1024x768 borderless "presentation maximize" with Windows+Shift+F.

Key f   A 4  FuncMaximizeBorderlessly
Key f   A 4S FuncMaximizeBorderlessly1024
Key Tab A 4  FuncMaximizeY

# Windows key plus an arrow key moves window into tile-like positions.

Key Up    A 4  ResizeMoveMaximize frame keep 50 keep 0
Key Down  A 4  ResizeMoveMaximize frame keep 50 keep 50
Key Right A 4  ResizeMoveMaximize frame 50 100 50 0
Key Left  A 4  ResizeMoveMaximize frame 50 100 0 0

Key 2     A 4  Resize frame 50 100
Key 3     A 4  ResizeMove frame 70 85 -0p -0p
Key 4     A 4  Resize frame 50 50
Key 5     A 4  Resize frame 1280p 720p

# For occasions when I want to be sitting back in front of a desktop and
# am far from a mouse, I have emergency keystrokes to let me move to new
# screens on my desktop.

Key KP_Up    A 4  Scroll 0 -100
Key KP_Down  A 4  Scroll 0 100
Key KP_Right A 4  Scroll 100 0
Key KP_Left  A 4  Scroll -100 0

# Mouse Bindings.

Mouse 1 S    A  FuncFvwmResizeOrRaise
Mouse 1 T    A  FuncFvwmMoveOrRaise
Mouse 1 I    A  Iconify
Mouse 2 TSIF A  Resize
Mouse 3 TSF  A  RaiseLower

# Menus.

DestroyMenu Applications
AddToMenu Applications "Applications" Title
+ "&a. Audacity"  Exec exec audacity
+ "&c. XChat"     Exec exec xchat
+ "&e. Earth"     Exec exec google-earth-pro
+ "&f. Firefox"   Exec exec firefox
+ "&g. Gimp"      Exec exec gimp
+ "&i. Inkscape"  Exec exec inkscape
+ "&r. Retro"     Exec exec bash bin/,retro
+ "&s. Skype"     Exec exec skype
+ "&t. Thunar"    Exec exec thunar
+ "&v. VirtualBox" Exec exec virtualbox
+ "&x. Xephyr :9" Exec exec Xephyr :9 -screen 1280x1000 -no-host-grab

DestroyMenu SshDestinations
AddToMenu SshDestinations "Remote Shells" Title
+ "&f. founders"   Exec exec xterm -e ssh founders

DestroyMenu BrowserBookmarks
AddToMenu BrowserBookmarks "Bookmarks" Title
+ "&m. Maps w/clipboard"  Exec exec ",maps"
+ "&r. Read feeds"  Exec exec browser "file:///home/brandon/local/htdocs/feeds.html"
+ "&w. Weather"  Exec exec browser "https://forecast.weather.gov/MapClick.php?lat=41.58918&lon=-85.83695"

DestroyMenu MenuFvwmWindowOps
AddToMenu MenuFvwmWindowOps
+ "$[gt.Window Operations]" Title
+ "$[gt.&S Save screenshot]" Exec exec xfce4-screenshooter -w -d 0 -s ~/Downloads
+ "$[gt.  Save region]" Exec exec xfce4-screenshooter -r -d 0 -s ~/Downloads
+ "$[gt.  Timer]" Exec sleep 1 && exec xfce4-screenshooter -w -d 0 -s ~/Downloads
+ "" Nop
+ "$[gt.&C Close]"         Close
+ "$[gt.&M Move]"          Move
+ "$[gt.&R Resize]"        Resize
+ "$[gt.  Resize 16x9]"    FuncMaximizeBorderlessly16_9
+ "$[gt.&T Title Off]"     FuncTitleOff
+ "$[gt.  Title On]"       FuncTitleOn
+ "$[gt.  (Un)On Top]"     ToggleLayer
+ "$[gt.  (Un)Stick]"      Stick
+ "$[gt.  (Un)Ma&ximize]"  Maximize
+ "$[gt.  Destroy]"        Destroy
+ "" Nop
+ "$[gt.&L Lock edgeflip]"    EdgeScroll 0 0
+ "$[gt.&U Unlock edgeflip]"  EdgeScroll 100 100
+ "" Nop
+ "  Window List" WindowList Root c c NoDeskSort
+ "" Nop
+ "$[gt.&W Window manager ops]"  Menu MenuFvwmWindowManagerOps Nop

DestroyMenu MenuFvwmWindowManagerOps
AddToMenu MenuFvwmWindowManagerOps
+ "$[gt.Window Manager]" Title
+ "$[gt.&L Lock screen]"  Exec exec slock
+ "$[gt.&R Reload fvwm2rc]"  Read config
+ "$[gt.  Kill lock/saver]"  Exec xset s off -dpms && killall xautolock
+ "$[gt.  Run lock/saver]"  Exec xset s on +dpms && $HOME/.fvwm/xautolock
+ "$[gt.  Restart fvwm]"  Restart
+ "$[gt.  Quit fvwm]"    Quit
+ "" Nop
+ "$[gt.&H Hibernate]" Exec slock & systemctl hibernate
+ "$[gt.&S Suspend]"   Exec slock & systemctl suspend

DestroyMenu Pastes
AddToMenu Pastes "Pastes" Title
+ DynamicPopUpAction PipeRead .fvwm/paste-menu.sh

DestroyMenu MenuTransforms
AddToMenu MenuTransforms
+ "Window Manager" Title
# "GFM" = "GitHub Flavored Markdown"
+ "&G Markdown to GFM"  Exec exec xclip -o -selection primary | pandoc -r commonmark -t gfm --wrap=none | xclip -selection clipboard
+ "&P Paper 2xLF"  Exec exec xclip -o -selection clipboard | sed 's/$/\n/' | xclip -selection clipboard -t UTF8_STRING

# Common FVWM functions used in several of the directives above.

DestroyFunc FuncTitleOn
AddToFunc FuncTitleOn
+ I ThisWindow WindowStyle Title
#+ I UpdateStyles

DestroyFunc FuncTitleOff
AddToFunc FuncTitleOff
+ I ThisWindow WindowStyle !Title
#+ I UpdateStyles

DestroyFunc FuncFvwmMoveOrRaise
AddToFunc FuncFvwmMoveOrRaise
+ I Raise
+ M Move
+ D Lower

DestroyFunc FuncMaximizeBorderlessly
AddToFunc FuncMaximizeBorderlessly
+ I ThisWindow (!Maximized) WindowStyle BorderWidth 0, HandleWidth 0, !Title
+ I ThisWindow (Maximized) WindowStyle BorderWidth 1, HandleWidth 6, Title
+ I UpdateStyles
+ I Maximize Toggle 100 100

DestroyFunc FuncMaximizeBorderlessly1024
AddToFunc FuncMaximizeBorderlessly1024
+ I ThisWindow (!Maximized) WindowStyle BorderWidth 0, HandleWidth 0, !Title
+ I ThisWindow (Maximized) WindowStyle BorderWidth 1, HandleWidth 6, Title
+ I UpdateStyles
+ I Maximize Toggle 1024p 768p

DestroyFunc FuncMaximizeBorderlessly16_9
AddToFunc FuncMaximizeBorderlessly16_9
+ I ThisWindow (!Maximized) WindowStyle BorderWidth 0, HandleWidth 0, !Title
+ I ThisWindow (Maximized) WindowStyle BorderWidth 1, HandleWidth 6, Title
+ I UpdateStyles
+ I Maximize Toggle 1280p 720p

DestroyFunc FuncMaximizeY
AddToFunc FuncMaximizeY
+ I Maximize Toggle 0 100

DestroyFunc FuncFvwmResizeOrRaise
AddToFunc FuncFvwmResizeOrRaise
+ I Raise
+ M Resize
+ D Lower

DestroyFunc ToggleLayer
AddToFunc   ToggleLayer
+ I ThisWindow (Layer 6) Layer
+ I TestRc (NoMatch) Layer 0 6

# From http://edulinux.homeunix.org/fvwm/fvwmcookbookfaq.html#WP2 page:

DestroyFunc ShowDesktop
AddToFunc   ShowDesktop
+ I All (CurrentPage, State 1) Iconify off
+ I All (CurrentPage, State 1) State 1 False
+ I TestRc (Match) Break
+ I All (CurrentPage, !Iconic, !State 1) State 1 True
+ I All (CurrentPage, !Iconic, State 1) Iconify

# Read config files for modules.

read ConfigFvwmBacker
# read ConfigFvwmButtons
read ConfigFvwmIconMan
read ConfigFvwmIdent
read ConfigFvwmPager

# Allow local per-account customization in a separate file.

Read fvwm2rc-local

# Allow the Pager to be brought up with Window+Space.

Key Space        A       4       TogglePager

AddToFunc InitFunction
+ I SetEnv pager_state down

DestroyFunc TogglePager
AddToFunc   TogglePager
+ I Exec exec ~/.fvwm/win-space-toggle
+ I Test   (EnvMatch pager_state down) Module FvwmPager *
+ I TestRc (Match) SetEnv pager_state up
+ I TestRc (NoMatch) KillModule FvwmPager
+ I TestRc (NoMatch) SetEnv pager_state down

Style FvwmPager StaysOnTop, BorderWidth 0
*FvwmPager: UseSkipList

# When I select a menu from the window list, move it to (0,0) on the
# current screen.  My main use of the window list is to find windows
# (PyCharm windows in particular) that decide to open somewhere entirely
# off the desktop.

DestroyFunc WindowListFunc
AddToFunc WindowListFunc
+ I Iconify off
+ I Raise
+ I Move 0p 0p

# Run all of the other programs that I need to be happy in Ubuntu.
# There are customizations for particular machines here, like "guinness"
# which is my cantankerous Dell Latitude laptop.  Ubuntu does not seem
# to always set the dpi correctly on my laptops, so I do it here.

AddToFunc SessionInitFunction

+ I Exec [ "$(hostname)" == "guinness" ] && xrandr --dpi 106 && sleep 4 && xrandr --dpi 106
+ I Exec [ "$(hostname)" == "guinness" ] && exec xinput --set-prop "AlpsPS/2 ALPS DualPoint TouchPad" "Device Accel Velocity Scaling" 32.0

+ I Exec [ "$(hostname)" == "oldrasputin" ] && xrandr --dpi 110

# Impose my standard X windows settings.  The commands are kept in a
# stand-alone shell script, so I can re-run them in mid-session if they
# get mangled or reset by an application.

+ I Exec bash /home/brandon/bin/,xset
